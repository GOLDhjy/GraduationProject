//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public SwordComponent sword { get { return (SwordComponent)GetComponent(PlayerComponentsLookup.Sword); } }
    public bool hasSword { get { return HasComponent(PlayerComponentsLookup.Sword); } }

    public void AddSword(UnityEngine.GameObject newSword) {
        var index = PlayerComponentsLookup.Sword;
        var component = (SwordComponent)CreateComponent(index, typeof(SwordComponent));
        component.Sword = newSword;
        AddComponent(index, component);
    }

    public void ReplaceSword(UnityEngine.GameObject newSword) {
        var index = PlayerComponentsLookup.Sword;
        var component = (SwordComponent)CreateComponent(index, typeof(SwordComponent));
        component.Sword = newSword;
        ReplaceComponent(index, component);
    }

    public void RemoveSword() {
        RemoveComponent(PlayerComponentsLookup.Sword);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherSword;

    public static Entitas.IMatcher<PlayerEntity> Sword {
        get {
            if (_matcherSword == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Sword);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherSword = matcher;
            }

            return _matcherSword;
        }
    }
}
