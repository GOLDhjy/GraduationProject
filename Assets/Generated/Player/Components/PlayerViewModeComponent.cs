//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public ViewModeComponent viewMode { get { return (ViewModeComponent)GetComponent(PlayerComponentsLookup.ViewMode); } }
    public bool hasViewMode { get { return HasComponent(PlayerComponentsLookup.ViewMode); } }

    public void AddViewMode(MyService.PlayerViewModeController newVlaue) {
        var index = PlayerComponentsLookup.ViewMode;
        var component = (ViewModeComponent)CreateComponent(index, typeof(ViewModeComponent));
        component.Vlaue = newVlaue;
        AddComponent(index, component);
    }

    public void ReplaceViewMode(MyService.PlayerViewModeController newVlaue) {
        var index = PlayerComponentsLookup.ViewMode;
        var component = (ViewModeComponent)CreateComponent(index, typeof(ViewModeComponent));
        component.Vlaue = newVlaue;
        ReplaceComponent(index, component);
    }

    public void RemoveViewMode() {
        RemoveComponent(PlayerComponentsLookup.ViewMode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherViewMode;

    public static Entitas.IMatcher<PlayerEntity> ViewMode {
        get {
            if (_matcherViewMode == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.ViewMode);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherViewMode = matcher;
            }

            return _matcherViewMode;
        }
    }
}
