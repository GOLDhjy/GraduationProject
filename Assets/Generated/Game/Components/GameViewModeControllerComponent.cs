//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ViewModeControllerComponent viewModeController { get { return (ViewModeControllerComponent)GetComponent(GameComponentsLookup.ViewModeController); } }
    public bool hasViewModeController { get { return HasComponent(GameComponentsLookup.ViewModeController); } }

    public void AddViewModeController(MyService.CameraViewModeController newValue) {
        var index = GameComponentsLookup.ViewModeController;
        var component = (ViewModeControllerComponent)CreateComponent(index, typeof(ViewModeControllerComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceViewModeController(MyService.CameraViewModeController newValue) {
        var index = GameComponentsLookup.ViewModeController;
        var component = (ViewModeControllerComponent)CreateComponent(index, typeof(ViewModeControllerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveViewModeController() {
        RemoveComponent(GameComponentsLookup.ViewModeController);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherViewModeController;

    public static Entitas.IMatcher<GameEntity> ViewModeController {
        get {
            if (_matcherViewModeController == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ViewModeController);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherViewModeController = matcher;
            }

            return _matcherViewModeController;
        }
    }
}
